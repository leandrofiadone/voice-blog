---
import Layout from "../layouts/Layout.astro"
import VoiceRecorder from "../components/VoiceRecorder.jsx"
import { getCollection } from 'astro:content'
import { ViewTransitions } from 'astro:transitions'

// Obtener todos los posts de la colección
const posts = await getCollection('posts')

// Filtrar posts no borrador y ordenar por fecha (más reciente primero)
const publishedPosts = posts
  .filter(post => !post.data.draft)
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())
---

<Layout title="Mi Blog con Dictado por Voz">
  <!-- Hero Section -->
  <section
    class="relative bg-gradient-to-r from-blue-500 to-indigo-600 text-white py-16 px-4 sm:px-6 lg:px-8"
    data-animate="fade-scale"
    transition:name="hero">
    <div class="max-w-4xl mx-auto text-center">
      <h1 class="text-4xl sm:text-5xl font-bold mb-4 tracking-tight" transition:name="main-title">
        Mi Blog Personal
      </h1>
      <p class="text-lg sm:text-xl text-blue-100">
        Crea y comparte contenido único usando tu voz y la potencia de la IA
      </p>
    </div>
  </section>

  <!-- Voice Recorder Section -->
  <section class="max-w-3xl mx-auto py-12 px-4 sm:px-6 lg:px-8" data-animate="fade-up">
    <div
      class="bg-white rounded-xl shadow-xl p-8 mb-12 hover-lift"
      transition:name="voice-recorder">
      <h2 class="text-2xl sm:text-3xl font-semibold text-gray-800 mb-6">
        Crear Nueva Entrada
      </h2>
      <VoiceRecorder client:load />
    </div>
  </section>

  <!-- Blog Entries Section -->
  <section class="max-w-4xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
    <h2 class="text-2xl sm:text-3xl font-semibold text-gray-800 mb-8">
      Últimas Entradas
    </h2>
    
    {publishedPosts.length === 0 ? (
      <div class="text-center py-12">
        <p class="text-gray-600 text-lg">
          No hay entradas publicadas aún. ¡Crea tu primera entrada usando el grabador de voz!
        </p>
      </div>
    ) : (
      <div class="grid gap-8 sm:grid-cols-2 lg:grid-cols-3">
        {publishedPosts.map((post, index) => (
          <article
            class="bg-white rounded-lg shadow-md overflow-hidden hover-lift"
            data-animate="fade-up"
            style={`animation-delay: ${index * 0.1}s`}
            transition:name={`post-${post.slug}`}>
            <div class="p-6">
              <h3 class="text-xl font-semibold text-gray-800 mb-2" transition:name={`post-title-${post.slug}`}>
                {post.data.title}
              </h3>
              <p class="text-gray-600 text-sm mb-4">
                {post.data.description || "Sin descripción disponible"}
              </p>
              
              <!-- Tags -->
              {post.data.tags && post.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-1 mb-3">
                  {post.data.tags.slice(0, 3).map((tag) => (
                    <span class="bg-blue-100 text-blue-800 px-2 py-1 rounded text-xs">
                      {tag}
                    </span>
                  ))}
                  {post.data.tags.length > 3 && (
                    <span class="text-gray-500 text-xs">+{post.data.tags.length - 3} más</span>
                  )}
                </div>
              )}
              
              <div class="flex items-center text-sm text-gray-500">
                <svg
                  class="w-4 h-4 mr-1"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                  xmlns="http://www.w3.org/2000/svg">
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                  ></path>
                </svg>
                <span>
                  {new Date(post.data.date).toLocaleDateString('es-ES', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </span>
              </div>
            </div>
            <a
              href={`/${post.slug}`}
              class="block bg-blue-500 text-white text-center py-3 font-medium hover:bg-blue-600 transition-colors"
              aria-label={`Leer entrada completa: ${post.data.title}`}>
              Leer Más
            </a>
          </article>
        ))}
      </div>
    )}
  </section>
</Layout>